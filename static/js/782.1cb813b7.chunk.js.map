{"version":3,"file":"static/js/782.1cb813b7.chunk.js","mappings":"oLAiBA,SAASA,EAAKC,EAAUC,GACtB,IAAMC,EAAUF,EAASG,cAAc,QACjCC,EAAcC,SAASH,EAAQI,aACrC,GAAIL,IAAcG,EAAlB,CAEA,IAAMG,EAAaP,EAASG,cAAc,WACpCK,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAUC,IAAI,YACtB,IAAMC,EAAaJ,SAASC,cAAc,OAC1CG,EAAWF,UAAUC,IAAI,eAEzBV,EAAQI,YAAcF,EACtBG,EAAWD,YAAcF,EACzBI,EAAQF,YAAcF,EACtBS,EAAWP,YAAcL,EAEzBO,EAAQM,iBAAiB,kBAAkB,SAACC,GAC1Cb,EAAQI,YAAcL,KAExBO,EAAQM,iBAAiB,gBAAgB,SAACC,GACxCP,EAAQQ,YAEVH,EAAWC,iBAAiB,gBAAgB,SAACC,GAC3CR,EAAWD,YAAcL,EACzBY,EAAWG,YAEbhB,EAASiB,OAAOT,EAASK,IAG3B,IA6EA,EA7EuB,SAAC,GAIjB,IAAD,IAHJK,YAAAA,OAGI,OAHU,IAAIC,MAAOC,UAAS,IAAID,MAAOE,aAAe,IAGxD,MAFJC,KAAAA,OAEI,aADJC,SAAAA,OACI,MADO,aACP,EAGJ,GAA2BC,EAAAA,EAAAA,WAAS,GAApC,eAAOC,EAAP,KAAeC,EAAf,KAuBA,IArBAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAQC,aAAY,WACtB,IAAMC,EAAc,IAAIX,KAClBY,EAAmBC,KAAKC,MAAMf,EAAcY,GAAe,KAE7DL,GAAUH,EACZY,cAAcN,GACLG,GAAoB,EA1DrC,SAAsBI,GACpB,IAAMC,EAAUD,EAAO,GACjBE,EAAUL,KAAKM,MAAMH,EAAO,IAAM,GAKxCpC,EAAKU,SAASN,cAAc,uBAAwB6B,KAAKM,MAAMD,EAAU,KACzEtC,EAAKU,SAASN,cAAc,uBAAwBkC,EAAU,IAC9DtC,EAAKU,SAASN,cAAc,uBAAwB6B,KAAKM,MAAMF,EAAU,KACzErC,EAAKU,SAASN,cAAc,uBAAwBiC,EAAU,IAiDxDG,CAAaR,IAEbL,GAAS,GACTQ,cAAcN,GACdL,OAID,KAEH,OAAO,kBAAMW,cAAcN,MAC1B,CAACV,EAAaI,EAAMG,EAAQF,KAE3BD,EAEJ,OAAOG,GAAUH,EAAO,MACtB,iBAAKkB,UAAU,YAAf,WAcE,iBAAKA,UAAU,oBAAf,WACE,iBAAKA,UAAU,UAAf,WACE,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,mBAEF,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,sBAGJ,gBAAKA,UAAU,gBAAf,yBAEF,iBAAKA,UAAU,oBAAf,WACE,iBAAKA,UAAU,UAAf,WACE,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,mBAEF,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,sBAGJ,gBAAKA,UAAU,gBAAf","sources":["components/CountdownTimer/index.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\n\nimport \"./style.css\";\n\nfunction flipAllCards(time) {\n  const seconds = time % 60;\n  const minutes = Math.floor(time / 60) % 60;\n  // const hours = Math.floor(time / 3600);\n\n  // flip(document.querySelector(\"[data-hours-tens]\"), Math.floor(hours / 10));\n  // flip(document.querySelector(\"[data-hours-ones]\"), hours % 10);\n  flip(document.querySelector(\"[data-minutes-tens]\"), Math.floor(minutes / 10));\n  flip(document.querySelector(\"[data-minutes-ones]\"), minutes % 10);\n  flip(document.querySelector(\"[data-seconds-tens]\"), Math.floor(seconds / 10));\n  flip(document.querySelector(\"[data-seconds-ones]\"), seconds % 10);\n}\n\nfunction flip(flipCard, newNumber) {\n  const topHalf = flipCard.querySelector(\".top\");\n  const startNumber = parseInt(topHalf.textContent);\n  if (newNumber === startNumber) return;\n\n  const bottomHalf = flipCard.querySelector(\".bottom\");\n  const topFlip = document.createElement(\"div\");\n  topFlip.classList.add(\"top-flip\");\n  const bottomFlip = document.createElement(\"div\");\n  bottomFlip.classList.add(\"bottom-flip\");\n\n  topHalf.textContent = startNumber;\n  bottomHalf.textContent = startNumber;\n  topFlip.textContent = startNumber;\n  bottomFlip.textContent = newNumber;\n\n  topFlip.addEventListener(\"animationstart\", (e) => {\n    topHalf.textContent = newNumber;\n  });\n  topFlip.addEventListener(\"animationend\", (e) => {\n    topFlip.remove();\n  });\n  bottomFlip.addEventListener(\"animationend\", (e) => {\n    bottomHalf.textContent = newNumber;\n    bottomFlip.remove();\n  });\n  flipCard.append(topFlip, bottomFlip);\n}\n\nconst CountdownTimer = ({\n  countToDate = new Date().setHours(new Date().getMinutes() + 24),\n  stop = false,\n  callback = function () {},\n}) => {\n  // let previousTimeBetweenDates;\n  // let isStop = false;\n  const [isStop, seIsStop] = useState(false);\n\n  useEffect(() => {\n    let timer = setInterval(() => {\n      const currentDate = new Date();\n      const timeBetweenDates = Math.ceil((countToDate - currentDate) / 1000);\n\n      if (isStop || stop) {\n        clearInterval(timer);\n      } else if (timeBetweenDates > -1) {\n        flipAllCards(timeBetweenDates);\n      } else {\n        seIsStop(true);\n        clearInterval(timer);\n        callback();\n      }\n\n      // previousTimeBetweenDates = timeBetweenDates;\n    }, 250);\n\n    return () => clearInterval(timer);\n  }, [countToDate, stop, isStop, callback]);\n\n  if (stop) return;\n\n  return isStop || stop ? null : (\n    <div className=\"container\">\n      {/*<div className=\"container-segment\">*/}\n      {/*  <div className=\"segment-title\">Hours</div>*/}\n      {/*  <div className=\"segment\">*/}\n      {/*    <div className=\"flip-card\" data-hours-tens>*/}\n      {/*      <div className=\"top\">2</div>*/}\n      {/*      <div className=\"bottom\">2</div>*/}\n      {/*    </div>*/}\n      {/*    <div className=\"flip-card\" data-hours-ones>*/}\n      {/*      <div className=\"top\">4</div>*/}\n      {/*      <div className=\"bottom\">4</div>*/}\n      {/*    </div>*/}\n      {/*  </div>*/}\n      {/*</div>*/}\n      <div className=\"container-segment\">\n        <div className=\"segment\">\n          <div className=\"flip-card\" data-minutes-tens>\n            <div className=\"top\">0</div>\n            <div className=\"bottom\">0</div>\n          </div>\n          <div className=\"flip-card\" data-minutes-ones>\n            <div className=\"top\">0</div>\n            <div className=\"bottom\">0</div>\n          </div>\n        </div>\n        <div className=\"segment-title\">Minutes</div>\n      </div>\n      <div className=\"container-segment\">\n        <div className=\"segment\">\n          <div className=\"flip-card\" data-seconds-tens>\n            <div className=\"top\">0</div>\n            <div className=\"bottom\">0</div>\n          </div>\n          <div className=\"flip-card\" data-seconds-ones>\n            <div className=\"top\">0</div>\n            <div className=\"bottom\">0</div>\n          </div>\n        </div>\n        <div className=\"segment-title\">Seconds</div>\n      </div>\n    </div>\n  );\n};\n\nexport default CountdownTimer;\n"],"names":["flip","flipCard","newNumber","topHalf","querySelector","startNumber","parseInt","textContent","bottomHalf","topFlip","document","createElement","classList","add","bottomFlip","addEventListener","e","remove","append","countToDate","Date","setHours","getMinutes","stop","callback","useState","isStop","seIsStop","useEffect","timer","setInterval","currentDate","timeBetweenDates","Math","ceil","clearInterval","time","seconds","minutes","floor","flipAllCards","className"],"sourceRoot":""}