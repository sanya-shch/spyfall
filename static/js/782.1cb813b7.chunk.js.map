{"version":3,"file":"static/js/782.1cb813b7.chunk.js","mappings":"oLAiBA,SAASA,EAAKC,EAAUC,GACtB,IAAMC,EAAUF,EAASG,cAAc,QACjCC,EAAcC,SAASH,EAAQI,aACrC,GAAIL,IAAcG,EAAlB,CAEA,IAAMG,EAAaP,EAASG,cAAc,WACpCK,EAAUC,SAASC,cAAc,OACvCF,EAAQG,UAAUC,IAAI,YACtB,IAAMC,EAAaJ,SAASC,cAAc,OAC1CG,EAAWF,UAAUC,IAAI,eAEzBV,EAAQI,YAAcF,EACtBG,EAAWD,YAAcF,EACzBI,EAAQF,YAAcF,EACtBS,EAAWP,YAAcL,EAEzBO,EAAQM,iBAAiB,kBAAkB,SAAAC,GACzCb,EAAQI,YAAcL,KAExBO,EAAQM,iBAAiB,gBAAgB,SAAAC,GACvCP,EAAQQ,YAEVH,EAAWC,iBAAiB,gBAAgB,SAAAC,GAC1CR,EAAWD,YAAcL,EACzBY,EAAWG,YAEbhB,EAASiB,OAAOT,EAASK,IAG3B,IA+EA,EA/EuB,SAAC,GAIO,IAAD,IAHJK,YAAAA,OAGI,OAHU,IAAIC,MAAOC,UAAS,IAAID,MAAOE,aAAe,IAGxD,MAFJC,KAAAA,OAEI,aADJC,SAAAA,OACI,MADO,aACP,EAG5B,GAA2BC,EAAAA,EAAAA,WAAS,GAApC,eAAOC,EAAP,KAAeC,EAAf,KAuBA,IArBAC,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAQC,aAAY,WACtB,IAAMC,EAAc,IAAIX,KAClBY,EAAmBC,KAAKC,MAAMf,EAAcY,GAAe,KAE7DL,GAAUH,EACZY,cAAcN,GACLG,GAAoB,EA1DrC,SAAsBI,GACpB,IAAMC,EAAUD,EAAO,GACjBE,EAAUL,KAAKM,MAAMH,EAAO,IAAM,GAKxCpC,EAAKU,SAASN,cAAc,uBAAwB6B,KAAKM,MAAMD,EAAU,KACzEtC,EAAKU,SAASN,cAAc,uBAAwBkC,EAAU,IAC9DtC,EAAKU,SAASN,cAAc,uBAAwB6B,KAAKM,MAAMF,EAAU,KACzErC,EAAKU,SAASN,cAAc,uBAAwBiC,EAAU,IAiDxDG,CAAaR,IAEbL,GAAS,GACTQ,cAAcN,GACdL,OAID,KAEH,OAAO,kBAAMW,cAAcN,MAC1B,CAACV,EAAaI,EAAMG,EAAQF,KAE3BD,EAEJ,OACEG,GAAUH,EAAO,MACf,iBAAKkB,UAAU,YAAf,WAcE,iBAAKA,UAAU,oBAAf,WACE,iBAAKA,UAAU,UAAf,WACE,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,mBAEF,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,sBAGJ,gBAAKA,UAAU,gBAAf,yBAEF,iBAAKA,UAAU,oBAAf,WACE,iBAAKA,UAAU,UAAf,WACE,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,mBAEF,iBAAKA,UAAU,YAAY,uBAA3B,WACE,gBAAKA,UAAU,MAAf,gBACA,gBAAKA,UAAU,SAAf,sBAGJ,gBAAKA,UAAU,gBAAf","sources":["components/CountdownTimer/index.js"],"sourcesContent":["import React, {useEffect, useState} from 'react';\r\n\r\nimport './style.css';\r\n\r\nfunction flipAllCards(time) {\r\n  const seconds = time % 60;\r\n  const minutes = Math.floor(time / 60) % 60;\r\n  // const hours = Math.floor(time / 3600);\r\n\r\n  // flip(document.querySelector(\"[data-hours-tens]\"), Math.floor(hours / 10));\r\n  // flip(document.querySelector(\"[data-hours-ones]\"), hours % 10);\r\n  flip(document.querySelector(\"[data-minutes-tens]\"), Math.floor(minutes / 10));\r\n  flip(document.querySelector(\"[data-minutes-ones]\"), minutes % 10);\r\n  flip(document.querySelector(\"[data-seconds-tens]\"), Math.floor(seconds / 10));\r\n  flip(document.querySelector(\"[data-seconds-ones]\"), seconds % 10);\r\n}\r\n\r\nfunction flip(flipCard, newNumber) {\r\n  const topHalf = flipCard.querySelector(\".top\");\r\n  const startNumber = parseInt(topHalf.textContent);\r\n  if (newNumber === startNumber) return;\r\n\r\n  const bottomHalf = flipCard.querySelector(\".bottom\");\r\n  const topFlip = document.createElement(\"div\");\r\n  topFlip.classList.add(\"top-flip\");\r\n  const bottomFlip = document.createElement(\"div\");\r\n  bottomFlip.classList.add(\"bottom-flip\");\r\n\r\n  topHalf.textContent = startNumber;\r\n  bottomHalf.textContent = startNumber;\r\n  topFlip.textContent = startNumber;\r\n  bottomFlip.textContent = newNumber;\r\n\r\n  topFlip.addEventListener(\"animationstart\", e => {\r\n    topHalf.textContent = newNumber;\r\n  });\r\n  topFlip.addEventListener(\"animationend\", e => {\r\n    topFlip.remove();\r\n  });\r\n  bottomFlip.addEventListener(\"animationend\", e => {\r\n    bottomHalf.textContent = newNumber;\r\n    bottomFlip.remove();\r\n  });\r\n  flipCard.append(topFlip, bottomFlip);\r\n}\r\n\r\nconst CountdownTimer = ({\r\n                          countToDate = new Date().setHours(new Date().getMinutes() + 24),\r\n                          stop = false,\r\n                          callback = function(){},\r\n                        }) => {\r\n  // let previousTimeBetweenDates;\r\n  // let isStop = false;\r\n  const [isStop, seIsStop] = useState(false);\r\n\r\n  useEffect(() => {\r\n    let timer = setInterval(() => {\r\n      const currentDate = new Date();\r\n      const timeBetweenDates = Math.ceil((countToDate - currentDate) / 1000);\r\n\r\n      if (isStop || stop) {\r\n        clearInterval(timer);\r\n      } else if (timeBetweenDates > -1) {\r\n        flipAllCards(timeBetweenDates);\r\n      } else {\r\n        seIsStop(true);\r\n        clearInterval(timer);\r\n        callback();\r\n      }\r\n\r\n      // previousTimeBetweenDates = timeBetweenDates;\r\n    }, 250);\r\n\r\n    return () => clearInterval(timer);\r\n  }, [countToDate, stop, isStop, callback]);\r\n\r\n  if (stop) return;\r\n\r\n  return(\r\n    isStop || stop ? null : (\r\n      <div className=\"container\">\r\n        {/*<div className=\"container-segment\">*/}\r\n        {/*  <div className=\"segment-title\">Hours</div>*/}\r\n        {/*  <div className=\"segment\">*/}\r\n        {/*    <div className=\"flip-card\" data-hours-tens>*/}\r\n        {/*      <div className=\"top\">2</div>*/}\r\n        {/*      <div className=\"bottom\">2</div>*/}\r\n        {/*    </div>*/}\r\n        {/*    <div className=\"flip-card\" data-hours-ones>*/}\r\n        {/*      <div className=\"top\">4</div>*/}\r\n        {/*      <div className=\"bottom\">4</div>*/}\r\n        {/*    </div>*/}\r\n        {/*  </div>*/}\r\n        {/*</div>*/}\r\n        <div className=\"container-segment\">\r\n          <div className=\"segment\">\r\n            <div className=\"flip-card\" data-minutes-tens>\r\n              <div className=\"top\">0</div>\r\n              <div className=\"bottom\">0</div>\r\n            </div>\r\n            <div className=\"flip-card\" data-minutes-ones>\r\n              <div className=\"top\">0</div>\r\n              <div className=\"bottom\">0</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"segment-title\">Minutes</div>\r\n        </div>\r\n        <div className=\"container-segment\">\r\n          <div className=\"segment\">\r\n            <div className=\"flip-card\" data-seconds-tens>\r\n              <div className=\"top\">0</div>\r\n              <div className=\"bottom\">0</div>\r\n            </div>\r\n            <div className=\"flip-card\" data-seconds-ones>\r\n              <div className=\"top\">0</div>\r\n              <div className=\"bottom\">0</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"segment-title\">Seconds</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  );\r\n};\r\n\r\nexport default CountdownTimer;\r\n"],"names":["flip","flipCard","newNumber","topHalf","querySelector","startNumber","parseInt","textContent","bottomHalf","topFlip","document","createElement","classList","add","bottomFlip","addEventListener","e","remove","append","countToDate","Date","setHours","getMinutes","stop","callback","useState","isStop","seIsStop","useEffect","timer","setInterval","currentDate","timeBetweenDates","Math","ceil","clearInterval","time","seconds","minutes","floor","flipAllCards","className"],"sourceRoot":""}