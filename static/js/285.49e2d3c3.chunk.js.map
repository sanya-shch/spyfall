{"version":3,"file":"static/js/285.49e2d3c3.chunk.js","mappings":"uMA+FA,EAzFiB,SAAC,GAaO,IAZLA,EAYI,EAZJA,YACAC,EAWI,EAXJA,YACAC,EAUI,EAVJA,OACAC,EASI,EATJA,QACAC,EAQI,EARJA,YACAC,EAOI,EAPJA,eACAC,EAMI,EANJA,SACAC,EAKI,EALJA,UACAC,EAII,EAJJA,KACAC,EAGI,EAHJA,MACAC,EAEI,EAFJA,gBACAC,EACI,EADJA,aAElB,GAA8BC,EAAAA,EAAAA,UAASZ,GAAvC,eAAOa,EAAP,KAAgBC,EAAhB,KAgBA,OAdAC,EAAAA,EAAAA,YAAU,WACRD,EAAWd,KACV,CAACA,KAaF,iBAAKgB,UAAU,aAAf,WACE,gBAAKA,UAAU,cAAf,qBAGCH,EAAQI,KAAI,SAACC,EAAMC,GAClB,IAAMC,EAAQF,EAAKG,MAAQb,EAE3B,OACE,iBAAiBQ,UAAS,UAAKI,EAAQ,OAAS,GAAtB,YAA4BD,IAAUN,EAAQS,OAAS,EAAI,YAAc,aAAnG,WACGlB,GAAgBM,GAAoBC,GAQnC,iBAAKK,UAAU,aAAf,WACE,2BACGE,EAAKK,SACLrB,KAAYgB,EAAKG,MAAQlB,KAAaC,IACrC,SAAC,IAAD,CACEoB,KAAK,OACLC,SAAS,UACTC,SAAS,UACTC,QAAS,kBAAM1B,EAAYkB,UAIjC,yBAAMD,EAAKU,aAnBb,gBACED,QAAS,kBAAOP,IAAUX,IAtBdoB,EAsBwCX,OArBhEJ,GAAW,SAAAgB,GAAI,OAAIA,EAAKb,KAAI,SAAAc,GAC1B,OAAIA,EAAIV,MAAQQ,EAAKR,KACZ,kBAAKU,GAAZ,IAAiBC,SAAUH,EAAKG,UAG3BD,SANX,IAA0BF,GAuBZb,UAAS,oBAAgBI,GAAUX,EAAoB,GAAZ,UAAlC,YAAoDS,EAAKc,QAAU,eAAiB,IAF/F,SAIGd,EAAKK,WAkBTnB,IAAgBgB,IAAUX,IAAUC,IAAoBC,IACvD,SAAC,IAAD,CACEa,KAAK,cACLC,SAAS,UACTC,SAAS,UACTC,QAAS,kBAAMpB,EAAUW,QA7BrBC,OAmCZf,GAAeF,IACf,iBAAKc,UAAU,aAAf,WACE,iBAAKA,UAAU,YAAf,8BACoBX,MAEpB,iBAAKW,UAAU,YAAf,UAC0B,IAAvBiB,SAAS3B,GAAkB,QAAU,UACrCA","sources":["screens/game/components/NameList/index.js"],"sourcesContent":["import React, {useEffect, useState} from \"react\";\r\n\r\nimport Button from \"../../../../components/RippleButton\";\r\n\r\nimport \"./style.css\";\r\n\r\nconst NameList = ({\r\n                    playersList,\r\n                    onClickKick,\r\n                    isHost,\r\n                    hostUid,\r\n                    ongoingGame,\r\n                    minPlayerCount,\r\n                    spyCount,\r\n                    putToVote,\r\n                    uuid,\r\n                    isSpy,\r\n                    isMidGamePlayer,\r\n                    showJoinForm,\r\n                  }) => {\r\n  const [players, setPlayers] = useState(playersList);\r\n\r\n  useEffect(() => {\r\n    setPlayers(playersList);\r\n  }, [playersList]);\r\n\r\n  function changeCheckedArr(item) {\r\n    setPlayers(prev => prev.map(obj => {\r\n      if (obj.uid === item.uid) {\r\n        return { ...obj, checked: !item.checked }\r\n      }\r\n\r\n      return obj;\r\n    }))\r\n  }\r\n\r\n  return (\r\n    <div className=\"names-list\">\r\n      <div className=\"block-title\">\r\n        Players\r\n      </div>\r\n      {players.map((user, index) => {\r\n        const isItI = user.uid === uuid;\r\n\r\n        return (\r\n          <div key={index} className={`${isItI ? 'itsI' : ''} ${index === players.length - 1 ? 'last-item' : 'list-item'}`}>\r\n            {ongoingGame && !isMidGamePlayer && !showJoinForm ? (\r\n              <div\r\n                onClick={() => !isItI && !isSpy && changeCheckedArr(user)}\r\n                className={`name-item ${!isItI && !isSpy ? 'pointer' : ''} ${user.checked ? 'line-through' : ''}`}\r\n              >\r\n                {user.username}\r\n              </div>\r\n            ) : (\r\n              <div className='name-block'>\r\n                <div>\r\n                  {user.username}\r\n                  {isHost && !(user.uid === hostUid) && !ongoingGame && (\r\n                    <Button\r\n                      text=\"Kick\"\r\n                      colorOne=\"#f06966\"\r\n                      colorTwo=\"#ca3e47\"\r\n                      onClick={() => onClickKick(index)}\r\n                    />\r\n                  )}\r\n                </div>\r\n                <div>{user.points}</div>\r\n              </div>\r\n            )}\r\n            {ongoingGame && !isItI && !isSpy && !isMidGamePlayer && !showJoinForm && (\r\n              <Button\r\n                text=\"Put To Vote\"\r\n                colorOne=\"#755bea\"\r\n                colorTwo=\"#ff72c0\"\r\n                onClick={() => putToVote(user)}\r\n              />\r\n            )}\r\n          </div>\r\n      )})}\r\n\r\n      {!ongoingGame && isHost && (\r\n        <div className=\"info-block\">\r\n          <div className=\"info-item\">\r\n            minimum players: {minPlayerCount}\r\n          </div>\r\n          <div className=\"info-item\">\r\n            {parseInt(spyCount) === 1 ? \"spy: \" : \"spies: \"}\r\n            {spyCount}\r\n          </div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default NameList;\r\n"],"names":["playersList","onClickKick","isHost","hostUid","ongoingGame","minPlayerCount","spyCount","putToVote","uuid","isSpy","isMidGamePlayer","showJoinForm","useState","players","setPlayers","useEffect","className","map","user","index","isItI","uid","length","username","text","colorOne","colorTwo","onClick","points","item","prev","obj","checked","parseInt"],"sourceRoot":""}